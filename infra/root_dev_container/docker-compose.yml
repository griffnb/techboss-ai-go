name: ${COMPOSE_PROJECT_NAME:-techboss}-devcontainer
services:
  backend:
    image: "mcr.microsoft.com/devcontainers/go:1-1.24-bookworm"
    volumes:
      # Mount the entire workspace root so we can access both projects
      - ..:/workspaces:cached
    command: sleep infinity
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      localstack:
        condition: service_healthy
        
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
        
  localstack:
    image: localstack/localstack:4.0.0
    ports:
      - "4467:4566"
    environment:
      - EXTRA_CORS_ALLOWED_ORIGINS=http://localhost:9090
      - SERVICES=s3,sqs
      - DOCKER_HOST=unix:///var/run/docker.sock
    healthcheck:
      test: curl localhost:4566/health
      interval: 1s

  dynamodb:
    image: amazon/dynamodb-local
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    volumes:
      - "dynamo-data:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    ports:
      - "${DYNAMODB_PORT:-8002}:8000"

  db:
    image: postgres:17.0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    #expose:
    #  - "5432"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    volumes:
      - db-data:/var/lib/postgresql/data

  

volumes:
  db-data:
  dynamo-data:
